# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
PIPFILE.lock

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
flashcard_env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For PyCharm
#  Community Edition, use 'PyCharm CE' instead of 'PyCharm'.
.idea/

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Streamlit
.streamlit/

# Machine Learning / AI Models
models/
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
*.pth
*.pt
*.onnx
*.tflite
*.mlmodel

# Hugging Face Cache
.cache/
transformers_cache/
huggingface_hub/

# NLTK Data
nltk_data/

# Torch Hub Cache
torch/

# Datasets
data/
datasets/
*.csv
*.json
*.txt
*.pdf
!requirements.txt
!README.txt
!sample_*.txt
!example_*.pdf

# Logs and temporary files
*.log
*.tmp
*.temp
temp/
tmp/
logs/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# Backup files
*.bak
*.backup
*.old
*.orig

# Compressed files
*.zip
*.tar.gz
*.rar
*.7z

# IDE and Editor files
*.swp
*.swo
*~
.project
.pydevproject
.settings/

# Jupyter Notebook Checkpoints
.ipynb_checkpoints/

# pytest
.pytest_cache/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Profiling data
*.prof

# Memory profiling
*.mprof

# Local configuration files
config.local.py
settings.local.py
local_settings.py

# Database files
*.db
*.sqlite
*.sqlite3

# Uploaded files (for testing)
uploads/
temp_uploads/

# Generated flashcards (for testing)
generated_flashcards/
exports/
output/

# API keys and secrets (if any are added later)
.env.local
.env.production
secrets.py
api_keys.py

# Docker
Dockerfile.local
docker-compose.override.yml

# Node.js (in case any JS tools are added)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Package managers
package-lock.json
yarn.lock

# Build artifacts
build/
dist/

# Documentation build
docs/_build/
site/

# Temporary Python files
*.pyc
*.pyo
*.pyd

# Virtual environment activation scripts
activate
activate.bat
activate.ps1
deactivate

# Model downloads and cache
.transformers_cache/
.torch/
.cache/huggingface/

# Streamlit secrets
.streamlit/secrets.toml

# Local testing files
test_*.py
*_test.py
test_data/
sample_data/